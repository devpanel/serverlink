#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action $object [opts] --vhost <vhost> --file <filename>

  Options:
    --vhost <vhost>         the vhost to restore
    --file  <filename>      the file where to restore the vhost from

  Restores the contents of an archive file into the specified vhost
"

backup_restore() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name vhost file

  while [ -n "$1" ]; do
    name="$1"
    case "$name" in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;
      --file)
        [ -z "$2" ] && error_missing_value file
        file="$2"
        shift 2
        ;;
      --help)
        usage
        ;;
      *)
        error "unknown option $name"
        ;;
    esac
  done

  . $sys_dir/lib/functions

  local param
  for param in vhost file; do
    [ -z "${!param}" ] && error_missing_param $param
  done

  local sys_bkp_dir bkp_dir
  if [ "${file:0:1}" != / ]; then
    local f_bname=${file##*/}
    assign_deref_os_prop_or_exit sys_bkp_dir "$sys_dir" data_dir 
    bkp_dir="$sys_bkp_dir/vhost_archives/$vhost"
    file="$bkp_dir/$f_bname"
  fi

  local tmp_ext_dir vhost_user vhost_group
  tmp_ext_dir=$(mktemp -d)
  if [ $? -ne 0 ]; then
    error "unable to create temp dir"
  fi

  if ! tar -zxf "$file" -C "$tmp_ext_dir"; then
    error "unable to extract file $file"
  fi

  vhost_user="w_$vhost"
  vhost_group="$vhost_user"

  local orig_vhost target_public_html_dir web_tgz_file seed_app db_name
  orig_vhost=$(head -1 "$tmp_ext_dir/web/id")
  web_tgz_file="$tmp_ext_dir/web/w_$orig_vhost.tgz"

  target_public_html_dir=$(eval echo -n \~"$vhost_user/public_html/$vhost")
  if [ ! -d "$target_public_html_dir" ]; then
    if ! mkdir -m 711 "$target_public_html_dir"; then
      error "unable to create public directory $target_public_html_dir"
    fi

    if [ $EUID -eq 0 ] && ! chown "$vhost_user":"virtwww" "$target_public_html_dir"; then
      error "unable to chown '$target_public_html_dir' to $vhost_user"
    fi
  fi

  if [ $EUID -eq 0 ]; then
    if ! chgrp -R "$vhost_group" "$tmp_ext_dir"; then
      error "unable to chown temp dir to group '$vhost_group'"
      
      if ! chmod 750 "$tmp_ext_dir"; then
        error "unable to chmod temp dir $tmp_ext_dir"
      fi
    fi
  fi
  
  local -a tar_cmd=( tar -zxf "$web_tgz_file" -C "$target_public_html_dir" \
                         --strip-components 3 )

  tar_cmd+=( "./public_html/$orig_vhost" ) # add the original public_dir
                                             # to extract only public_html
  # extract web files
  local st
  if [ $EUID -eq 0 ]; then
    su -l -c "${tar_cmd[*]}" "$vhost_user"
    st=$?
  else
    "${tar_cmd[@]}"
    st=$?
  fi

  if [ $st -eq 0 ]; then
    printf "Successfully restored backup into public dir %s.\n" \
      "$target_public_html_dir"
    echo "Updating app config files with db credentials..."
  else
    printf "unable to extract '%s' into dir %s\n" \
      "$web_tgz_file" "$target_public_html_dir"
    exit 1
  fi

  # TODO: restore database
  
  "$self_bin" refresh config --vhost "$vhost"

  return 0
}
