#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} [opts] --vhost <vhost> --domain <domain>

  Options:
    --vhost <vhost>           the vhost to backup

    --domain <domain>         removes the domain from vhost (to remove multiple
                              domains, use this option multiple times)

    --no-reload               write the configuration files, but don't
                              reload Apache now

  Removes one or more domains from the specified vhost.
"

devpanel_cmd__remove_domain() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name vhost default_domain base_domain
  local -a cmd_args_ar=() vhost_args_ar=() domains_ar=()

  while [ -n "$1" ]; do
    name="$1"
    case "$name" in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;

      --domain)
        [ -z "$2" ] && error_missing_value "$name"
        domains_ar+=( "$2" )
        shift 2
        ;;

      --no-reload)
        cmd_args_ar+=( -N )
        shift
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown option '$name'"
        ;;
    esac
  done

  [ -z "${domains_ar[*]}" -o -z "$vhost" ] && usage

  if ! vhost_exists_and_is_enabled "$vhost"; then
    return 1
  fi

  default_domain=$(get_vhost_default_hostname "$vhost" ) || return $?
  base_domain=$(get_vhost_base_domain "$vhost" ) || return $?

  local _domain
  for _domain in "${domains_ar[@]}"; do
    [ -z "$_domain" ] && continue

    if [ "$_domain" == "$base_domain" ]; then
      # it's not allowed to remove the base domain, as it's used for other
      # internal operations
      error "can't remove base domain '$base_domain'" -
      return $?
    fi

    if [ "$_domain" == "$default_domain" ]; then
      # if the domain is the default domain, then set the base domain as the new
      # default hostname for that domain
      vhost_args_ar=( '*' "$base_domain" "${vhost_args_ar[@]}" )
    fi

    if [[ ! "$_domain" == *.* ]]; then
      # if the domain string doesn't include a dot, then include a dot in
      # the end to identify it as a fully qualified name
      _domain+="."
    fi

    vhost_args_ar+=( '-' "$_domain" )
  done

  cmd_args_ar+=( -n )

  "$sys_dir/libexec/config-vhost-names" "${cmd_args_ar[@]}" "$vhost" \
    "${vhost_args_ar[@]}"
}
