#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} [opts] --vhost <vhost> --domain <domain>

  Options:
    --vhost <vhost>           the vhost to backup

    --domain <domain>         removes the domain from vhost (to remove multiple
                              domains, use this option multiple times)

    --no-reload               write the configuration files, but don't
                              reload Apache now

  Removes one or more domains from the specified vhost.
"

devpanel_cmd__remove_domain() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name vhost default_domain base_domain
  local reload=yes
  local -a domains_ar=()

  while [ -n "$1" ]; do
    name="$1"
    case "$name" in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;

      --domain)
        [ -z "$2" ] && error_missing_value "$name"
        domains_ar+=( "$2" )
        shift 2
        ;;

      --no-reload)
        unset reload
        shift
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown option '$name'"
        ;;
    esac
  done

  [ -z "${domains_ar[*]}" -o -z "$vhost" ] && usage

  load_vhost_config "$vhost" || return $?

  if ! vhost_exists_and_is_enabled "$vhost"; then
    return 1
  fi

  default_domain="$v__vhost__server_name"
  base_domain="$v__vhost__base_domain"

  local -a opts_ar=()

  local -i n_chg=0
  local _domain
  for _domain in "${domains_ar[@]}"; do
    [ -z "$_domain" ] && continue

    if [ "$_domain" == "$base_domain" ]; then
      # it's not allowed to remove the base domain, as it's used for other
      # internal operations
      error "can't remove base domain '$base_domain'" -
      return $?
    fi

    if ! is_word_in_string "$_domain" "$v__vhost__domains"; then
      echo "Warning: domain '$_domain' is not on vhost '$vhost'" 1>&2
      continue
    fi

    if [ "$_domain" == "$default_domain" ]; then
      # if the domain is the default domain, then set the base domain as the new
      # default hostname for that domain
      opts_ar+=( "vhost.server_name = $base_domain" )
    fi

    if [[ "$v__vhost__domains" == $_domain\ * ]]; then
      v__vhost__domains=${v__vhost__domains#$_domain *}
      n_chg+=1
    elif [[ "$v__vhost__domains" == *\ $_domain\ * ]]; then
      v__vhost__domains=${v__vhost__domains// $_domain /\ }
      n_chg+=1
    elif [[ "$v__vhost__domains" == *\ $_domain ]]; then
      v__vhost__domains=${v__vhost__domains% $_domain}
      n_chg+=1
    else
      echo "Warning: skipping domain '$_domain' not found on vhost $vhost" 1>&2
      continue
    fi

    echo "Removing domain $_domain..."
  done

  if [ -z "$v__vhost__domains" ]; then
    error "Aborted. List of domains would be empty. A vhost needs at least 1 domain."
  fi

  if [ ${#opts_ar[@]} -eq 0 -a $n_chg -eq 0 ]; then
    echo "Ok. No change needed."
    return 0
  fi

  if [ $n_chg -gt 0 ]; then
    opts_ar+=( "vhost.domains = $v__vhost__domains" )
  fi

  if ! save_opts_in_vhost_config "$vhost" "${opts_ar[@]}"; then
    error "unable to update vhost configuration. No domain removed." -
    return $?
  fi

  if [ -n "$reload" ]; then
    if ! rewrite_vhost_apache_config "$vhost"; then
      echo "Warning: successfully removed domains, but failed to" \
           "reload Apache" 1>&2
    fi
  fi

  echo
  echo -n "Successfully removed"
  if [ $n_chg -eq 1 ]; then
    echo " domain."
  else
    echo " $n_chg domains."
  fi
}
