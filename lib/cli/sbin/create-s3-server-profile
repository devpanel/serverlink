#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} <opts>

  Required Options:
    --name   <name>                 a name for the new profile
                                    (format: a-z0-9-)

    --region <region>               region to use (e.g. us-west-2)

    --access-key <id>               access key id on S3

    --secret-key <secret>           secret key

    --cloud-name <name>             name of the cloud provider
                                    (e.g. aws, digital-ocean)


  Non-required Options:
    --set-default                   set this new S3 profile as the default
                                    profile for the system

    --default-bucket <bucket_name>  name of the bucket to be the default one
                                    for the system

    NOTE: when --set-default is specified, the --default-bucket option
          becomes required.


  Create a new S3 server profile.
"

devpanel_cmd__create_s3_server_profile() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name access_key secret_key cloud_name region set_default default_bucket
  local access_key_esc secret_key_esc
  local var opt
  local config_file cfg_tmpl_file local_tmpl_file
  local regex_str='^[a-z0-9]+([a-z0-9-]*[a-z0-9]+)*$'
  local -a cmd_args=()

  while [ -n "$1" ]; do
    opt="$1"
    case "$opt" in
      --name)
        [ -z "$2" ] && error_missing_value "$opt"
        name="$2"
        shift 2
        ;;

      --access-key)
        [ -z "$2" ] && error_missing_value "$opt"
        access_key="$2"
        shift 2
        ;;

      --secret-key)
        [ -z "$2" ] && error_missing_value "$opt"
        secret_key="$2"
        shift 2
        ;;

      --region)
        [ -z "$2" ] && error_missing_value "$opt"
        region="$2"
        shift 2
        ;;

      --cloud-name)
        [ -z "$2" ] && error_missing_value "$opt"
        cloud_name="$2"
        shift 2
        ;;

      --set-default)
        set_default=yes
        shift
        ;;

      --default-bucket)
        [ -z "$2" ] && error_missing_value "$opt"
        default_bucket="$2"
        shift 2
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown option $opt" -
        return $?
        ;;
    esac
  done

  if ! hash s3cmd &>/dev/null; then
    error "command s3cmd is not installed." -
    return $?
  fi

  for var in name access_key secret_key cloud_name region; do
    if [ -z "${!var}" ]; then
      error "missing required option. Please specify --${var//_/-}" -
      return $?
    fi
  done

  if [[ ! "$name" =~ $regex_str ]]; then
    error "invalid format for --name value" -
    return $?
  fi

  if [[ ! "$region" =~ $regex_str ]]; then
    error "invalid format for --region value" -
    return $?
  fi

  if [[ ! "$cloud_name" =~ $regex_str ]]; then
    error "invalid format for --cloud-name value" -
    return $?
  fi

  if s3_server_profile_exists "$name"; then
    error "there's already a profile with name '$name'" -
    return $?
  fi

  if [ -n "$set_default" -a -z "$default_bucket" ]; then
    error "when --set-default is specified, --default-bucket option is required" -
    return $?
  elif [ -n "$default_bucket" -a -z "$set_default" ]; then
    error "when --default-bucket is specified, --set-default option is required" -
    return $?
  fi

  local_tmpl_file="$conf__paths__s3__config_dir/s3cfg-$cloud_name.template"
  cfg_tmpl_file="$sys_dir/config/s3/s3cfg-${cloud_name}.template"
  if [ -f "$local_tmpl_file" ]; then
    cfg_tmpl_file="$local_tmpl_file"
  elif [ -f "$cfg_tmpl_file" ]; then
    :
  else
    error "missing template file '$local_tmpl_file' or '$cfg_tmpl_file' for cloud '$cloud_name'" -
    return $?
  fi

  config_file="$conf__paths__s3__config_dir/$name.cfg"
  if tmp_new_config_file=$(mktemp $config_file.XXXXXX); then
    temp_files_ar+=( "$tmp_new_config_file" )
  else
    error "unable to create temporary file" -
    return $?
  fi

  if ! cp "$cfg_tmpl_file" "$tmp_new_config_file"; then
    error "failed to copy '$cfg_tmpl_file' to '$tmp_new_config_file'" -
    return $?
  fi

  access_key_esc=$(escape_sed "$access_key")
  secret_key_esc=$(escape_sed "$secret_key")

  sed -i -e \
    "
      s/@@region@@/$region/g;
      s/@@access_key@@/$access_key_esc/g;
      s/@@secret_key@@/$secret_key_esc/g;
    " "$tmp_new_config_file"

  if [ $? -ne 0 ]; then
    error "failed to replace values on file '$tmp_new_config_file'" -
    return $?
  fi

  if mv -n "$tmp_new_config_file" "$config_file"; then
    echo "Successfully created S3 server profile."
  else
    error "failed to copy '$tmp_new_config_file' to '$config_file'" -
    return $?
  fi

  if is_var_set_to_yes set_default ; then
    save_opts_in_devpanel_config  "s3.default_server = $name" \
                                  "s3.default_bucket = $default_bucket"
    if [ $? -ne 0 ]; then
      echo "Warning: failed to save default options on devPanel config" 1>&2
    fi
  fi

  return 0
}
