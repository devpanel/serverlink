#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} [opts] --vhost <vhost> --domain <domain>

  Options:
    --vhost <vhost>           the vhost to backup

    --domain <domain>         adds the domain to vhost (to add multiple
                              domains, use this option multiple times)

    --default <domain>        sets the specified domain as the default for
                              the virtualhost on Apache

    --no-reload               write the configuration files, but don't
                              reload Apache now

  Adds one or more domains to the specified vhost.
"

devpanel_cmd__add_domain() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name vhost
  local server_domain curr_default_domain new_default_domain
  local reload=yes
  local -a domains_ar=()

  while [ -n "$1" ]; do
    name="$1"
    case "$name" in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;

      --domain)
        [ -z "$2" ] && error_missing_value "$name"
        domains_ar+=( "$2" )

        # NOTE: on Webenabled-v1 for each domain added it's also added the
        # corresponding domain prefixed with "www.".
        if is_webenabled_backwards_compat_enabled && [[ ! "$2" == www.* ]]; then
          domains_ar+=( "www.$2" )
        fi
        shift 2
        ;;

      --default)
        [ -z "$2" ] && error_missing_value "$name"
        new_default_domain="$2"
        domains_ar+=( "$2" )

        # NOTE: on Webenabled-v1 for each domain added it's also added the
        # corresponding domain prefixed with "www.".
        if is_webenabled_backwards_compat_enabled && [[ ! "$2" == www.* ]]; then
          domains_ar+=( "www.$2" )
        fi
        shift 2
        ;;

      --no-reload)
        unset reload
        shift
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown option '$name'"
        ;;
    esac
  done

  [ -z "${domains_ar[*]}" -a -z "$new_default_domain" ] || \
    [ -z "$vhost" ] && usage

  if ! vhost_exists "$vhost"; then
    error "vhost '$vhost' doesn't exist." -
    return $?
  fi

  load_vhost_config "$vhost" || return $?

  server_domain="$lamp__apache_vhosts__virtwww_domain"

  curr_default_domain="$v__vhost__server_name"

  local -a args_ar=()

  local -i n_chg=0
  if [ -n "${domains_ar[*]}" ]; then
    local _domain other_vhost
    for _domain in "${domains_ar[@]}"; do
      [ -z "$_domain" ] && continue

      if other_vhost=$(get_vhost_with_hostname "$_domain" ); then
        if [ "$other_vhost" == "$vhost" ]; then
          echo "Warning: domain '$_domain' is already added. Skipping..." 1>&2
          continue
        else
          error "domain '$_domain' is already on vhost '$other_vhost'" -
          return $?
        fi
      fi

      if is_word_in_string "$_domain" "$v__vhost__domains"; then
        echo "Warning: domain $_domain is already on vhost $vhost..." 1>&2
        continue
      else
        v__vhost__domains+=" $_domain"
        n_chg+=1
        echo "Adding domain $_domain..."
      fi
    done
  fi

  if [ -n "$new_default_domain" ]; then
    if [ "$new_default_domain" != "$curr_default_domain" ]; then
      args_ar+=( "vhost.server_name = $new_default_domain" )
    fi
  fi

  if [ ${#args_ar[@]} -eq 0 -a $n_chg -eq 0 ]; then
    echo "Ok. No change needed."
    return 0
  fi

  if [ $n_chg -gt 0 ]; then
    args_ar+=( "vhost.domains = $v__vhost__domains" )

    # when the default domain (ServerName) is not specified,
    # try to guess a good value for it
    if [ -z "$new_default_domain" -a \
      "$v__vhost__server_name" == "$v__vhost__base_domain" ]; then
      for _domain in $v__vhost__domains; do
        if [[ "$_domain" != *\** ]] && \
           [ "$_domain" != "$v__vhost__base_domain"   ] && \
           [[ "$_domain" != *.$v__vhost__base_domain ]]; then
          args_ar+=( "vhost.server_name = $_domain" )
          [ -t 0 ] && echo "Setting $_domain as the ServerName..."
          break
        fi
      done
    fi
  fi

  if ! save_opts_in_vhost_config "$vhost" "${args_ar[@]}"; then
    error "unable to update vhost configuration. No domain added." -
    return $?
  fi

  if [ -n "$reload" ]; then
    if ! rewrite_vhost_apache_config "$vhost"; then
      echo "Warning: domains added to the configuration, but failed" \
           "to reload Apache" 1>&2
    fi
  fi

  echo
  echo -n "Successfully added"
  if [ $n_chg -eq 1 ]; then
    echo " domain."
  else
    echo " $n_chg domains."
  fi
}
