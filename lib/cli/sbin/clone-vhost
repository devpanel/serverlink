#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action <opts>

  Options:
    --source-vhost  <vhost>         the source vhost from where to copy
                                    files and database

    --target-vhost  <vhost>         the new vhost to be created

    --password-stdin                read the password of the admin user of
                                    the app from stdin

  Clones a vhost to a new virtual host (copies the files and databases to a
  new virtual host).
"

devpanel_cmd__clone_vhost() {
  local name source_vhost target_vhost
  local source_vuser tmp_archive tmp_archive_fp
  local st php_ver
  local -a restore_args_ar=()
  
  [ $# -eq 0 -o -z "$1" ] && usage

  while [ -n "$1" ]; do
    name="$1"

    case $name in
      --source-vhost)
        [ -z "$2" ] && error_missing_value "$name"
        source_vhost="$2"
        shift 2
        ;;

      --target-vhost)
        [ -z "$2" ] && error_missing_value "$name"
        target_vhost="$2"
        shift 2
        ;;

      --password-stdin)
        restore_args_ar+=( --password-stdin )
        shift
        ;;

      --help)
        usage
        shift
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown parameter: $name" -
        return $?
        ;;
    esac
  done

  [ -z "$source_vhost" -o -z "$target_vhost" ] && usage

  if ! vhost_exists "$source_vhost"; then
    error "source vhost doesn't exist."
  fi

  if vhost_exists "$target_vhost"; then
    error "target vhost already exists. Can't clone to an existing vhost."
  fi

  load_vhost_config "$source_vhost" || return $?
  source_vuser="$v__vhost__linux_user"

  tmp_archive="tmp_archive_$source_vhost-$(date +%b-%d-%Y--%H-%M).tgz"
  tmp_archive_fp="$v__vhost__archives_dir/$tmp_archive"

  echo "Cloning stage 1: archive $src_vhost to $tmp_archive"
  if ! devpanel_run backup vhost --vhost "$source_vhost" \
         --file "$tmp_archive"; then
    return 1
  fi
  devpanel_trap_exit_cmds_ar+=( "rm -f $tmp_archive_fp" )

  echo "Cloning stage 2: restore $target_vhost from $tmp_archive"
  restore_args_ar+=( --vhost "$target_vhost" --from "$tmp_archive_fp" )
  restore_args_ar+=( --no-summary )
  if ! devpanel_run create vhost "${restore_args_ar[@]}"; then
    error "failed to create vhost '$target_vhost' from '$tmp_archive'" -
    return $?
  fi

  if is_htpasswd_enabled_on_vhost "$source_vhost"; then
    devpanel_run enable htpasswd --vhost "$target_vhost"
  fi

  if php_ver=$(get_php_version_from_vhost "$source_vhost" ); then
    devpanel_run set php version --vhost "$target_vhost" --version $php_ver
  fi
 
  devpanel_run show vhost info --vhost "$target_vhost"

  echo "Successfully cloned vhost '$source_vhost' to '$target_vhost'"
  return 0
}
