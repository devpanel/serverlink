#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action [opts] [--vhost <vhost>] [--domain <domain>]

  Options:
    --vhost  <vhost>         the vhost

    --domain <domain>        find the vhost associated with the
                             specified domain

    --conditional            only start if the vhost is not disabled and
                             if mysql was not intentionally stopped

    --quick                  just start MySQL but don't verify where it
                             keeps running (e.g. didn't stop due to an
                             internal error)

  Starts mysqld associated with the specified domain or vhost.
"

devpanel_cmd__start_mysql() {
  local param vhost vhost_user domain instance
  local conditional quick
  local st
  
  [ $# -eq 0 -o -z "$1" ] && usage

  while [ -n "$1" ]; do
    param="$1"

    case $param in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;

      --domain)
        [ -z "$2" ] && error_missing_value domain
        domain="$2"
        shift 2
        ;;

      --conditional)
        conditional=1
        shift
        ;;

      --quick)
        quick=yes
        shift
        ;;

      --help)
        usage
        ;;
      --)
        shift
        break
        ;;
      *)
        error "unknown parameter: $param"
        ;;
    esac
  done

  if [ -z "$vhost" -a -z "$domain" ]; then
    error "either --vhost or --domain needs to be specified"
  fi

  if [ -z "$vhost" ]; then
    vhost=$(get_vhost_with_hostname "$domain")
    if [ $? -ne 0 ]; then
      error "didn't find any vhost with the specified hostname"
    fi
  fi

  load_vhost_config "$vhost" || return $?
  vhost_user="$v__vhost__linux_user"

  if [ -n "$v__mysql__instance" ]; then
    instance="$v__mysql__instance"

    if [ -n "$v__mysql__external" -a "$v__mysql__external" == yes ]; then
      if [ -t 0 ]; then
        echo -n "Warning: the mysql instance of this vhost is external"
        echo " (will not restart it)"
      fi

      return 0
    fi
  else
    error "this vhost doesn't have a mysql instance" -
    return $?
  fi

  if [ -n "$conditional" ]; then
    if ! is_vhost_enabled "$vhost"; then
      # vhost is disabled, don't start it
      return 0
    fi

    if mysql_is_instanced_autostart_locked "$instance"; then
      # don't start if the instance is locked (e.g. manually stopped)
      return 0
    fi

    if mysql_instance_is_running "$instance"; then
      return 0
    fi
  fi

  mysql_instance_is_running "$instance"
  st=$?
  if [ $st -eq 0 ]; then
    error "mysql instance is already running" -
    return $?
  elif [ $st -eq 50 ]; then
    # 50 == internal error, unable to determine mysql state
    error "unable to determine mysql status" -
    return $st
  fi

  mysql_unlock_instance_autostart "$instance"

  if [ -n "$quick" ]; then
    mysql_start_instance "$instance"
  else
    mysql_start_n_check_instance "$instance"
    if [ $? -eq 0 ]; then
      echo "Successfully started MySQL instance '$instance'"
    fi
  fi
}
