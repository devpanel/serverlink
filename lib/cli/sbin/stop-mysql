#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action [opts] [--vhost <vhost>] [--domain <domain>]

  Options:
    --vhost  <vhost>         the vhost
    --domain <domain>        find the vhost associated with the
                             specified domain
    --forceful               do a forceful stop (kill -9)

  Stops mysqld associated with the specified domain or vhost.
"

devpanel_cmd__stop_mysql() {
  local param vhost vhost_user db_user domain instance forceful
  local st
  
  [ $# -eq 0 -o -z "$1" ] && usage

  while [ -n "$1" ]; do
    param="$1"

    case $param in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;
      --domain)
        [ -z "$2" ] && error_missing_value domain
        domain="$2"
        shift 2
        ;;
      --forceful)
        forceful=yes
        shift
        ;;
      --help)
        usage
        ;;
      --)
        shift
        break
        ;;
      *)
        error "unknown parameter: $param"
        ;;
    esac
  done

  if [ -z "$vhost" -a -z "$domain" ]; then
    error "either --vhost or --domain needs to be specified"
  fi

  if [ -z "$vhost" ]; then
    vhost=$(get_vhost_with_hostname "$domain")
    if [ $? -ne 0 ]; then
      error "didn't find any vhost with the specified hostname"
    fi
  fi

  load_vhost_config "$vhost" || return $?
  if [ -n "$v__mysql__instance" ]; then
    instance="$v__mysql__instance"

    if [ -n "$v__mysql__external" -a "$v__mysql__external" == yes ]; then
      error "the mysql of this vhost is external. Can't be restarted" 1>&2 -
      return $?
    fi
  else
    error "this vhost doesn't have any mysql instance" -
    return $?
  fi

  mysql_instance_is_running "$instance"
  st=$?
  if [ $st -ne 0 ]; then
    if [ $st -eq 50 ]; then
      # 50 == internal error
      error "can't get status of mysql instance" -
      return $?
    else
      error "mysql instance is not running" -
      return $?
    fi
  fi

  mysql_lock_instance_autostart "$instance"

  if mysql_stop_instance "$instance"; then
    echo "Succesfully stopped mysql instance '$instance'"
    return 0
  else
    if [ -z "$forceful" ]; then
      echo "Failed to stop mysql instance '$instance'" 1>&2
      return 1
    fi
  fi

  if [ -n "$forceful" ]; then
    mysql_force_instance_stop "$instance"
  else
    return 0
  fi
}
