#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action [opts] [--vhost <vhost>] [--domain <domain>]

  Options:
    --vhost  <vhost>          the vhost

    --domain <domain>         find the vhost associated with the
                              specified domain

    --conditional             only try to restart if the vhost is enabled

    --quick                  just start MySQL but don't verify where it
                             keeps running (e.g. didn't stop due to an
                             internal error)


  Restarts mysqld associated with the specified domain or vhost.
"

devpanel_cmd__restart_mysql() {
  local param vhost domain vhost_user db_user  
  local instance conditional quick
  local -a cmd_args_ar=()
  local -i st

  [ $# -eq 0 -o -z "$1" ] && usage

  while [ -n "$1" ]; do
    param="$1"

    case $param in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;

      --domain)
        [ -z "$2" ] && error_missing_value domain
        domain="$2"
        shift 2
        ;;

      --quick)
        quick=yes
        cmd_args_ar+=( $param )
        shift
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      --conditional)
        conditional=1
        cmd_args_ar+=( $param )
        shift
        ;;

      *)
        error "unknown parameter: $param"
        ;;
    esac
  done

  if [ -z "$vhost" -a -z "$domain" ]; then
    error "either --vhost or --domain needs to be specified"
  fi

  if [ -z "$vhost" ]; then
    vhost=$(get_vhost_with_hostname "$domain")
    if [ $? -ne 0 ]; then
      error "didn't find any vhost with the specified hostname"
    fi
  fi

  if ! vhost_exists "$vhost"; then
    error "vhost doesn't exist."
  fi

  load_vhost_config "$vhost" || return $?
  vhost_user="$v__vhost__linux_user"

  if [ -n "$v__mysql__instance" ]; then
    instance="$v__mysql__instance"
  else
    error "this vhost is not associated to a MySQL instance" -
    return $?
  fi

  if [ -n "$conditional" ]; then
    if ! is_vhost_enabled "$vhost"; then
      return 0
    fi
  fi

  mysql_instance_is_running "$instance"
  st=$?
  if [ $st -eq 0 ]; then
    devpanel_run stop mysql --vhost "$vhost" --forceful
  elif [ $st -eq 50 ]; then
    error "unable to get status of mysql instance" -
    return $?
  fi

  devpanel_run start mysql --vhost "$vhost" "${cmd_args_ar[@]}"
}
