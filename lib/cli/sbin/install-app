#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} [opts]

  Options:
    --publisher <name>         publisher of the application
    --app <name>               the name of the application to install
    --vhost <name>             the name of the vhost where to install
    --desc <description>       a short description of the apps's purpose
    --password-stdin           read the app admin password from stdin
    --php-version <version>    the PHP version to use (e.g. 5.6, 7.1)
    --password-inline <pass>   set the password for app (note: this option
                               is a bit insecure on shared servers as it's
                               possible to see the password with the ps command)
    --no-update                don't try to update the app after installing

  Installs the specified application in a new virtual host.
"

devpanel_cmd__install_app(){
  [ -z "$1" ] && usage

  local name vhost arg publisher app app_url desc php_version
  local app_password password_origin
  local read_pw_stdin update_app=yes
  local -a cmd_args=()

  while [ -n "$1" ]; do
    arg="$1"
    case "$arg" in
      --publisher)
        [ -z "$2" ] && { error_missing_value "$arg"; return $?; }
        if [[ "$2" =~ ^[A-Za-z0-9_]+$ ]]; then
          publisher="$2"
          shift 2
        else
          error "invalid format for publisher name"
        fi
        ;;

      --app)
        [ -z "$2" ] && { error_missing_value "$arg"; return $?; }
        app="$2"
        shift 2
        ;;

      --vhost)
        [ -z "$2" ] && { error_missing_value "$arg"; return $?; }
        vhost="$2"
        shift 2
        ;;

      --desc)
        [ -z "$2" ] && error_missing_value "$name"
        desc="$2"
        shift 2
        ;;

      --password-stdin)
        read_pw_stdin=1
        [ -n "$password_origin" ] && \
          error "please specify only one password option."
        password_origin="stdin"
        shift
        ;;

      --password-inline)
        [ -z "$2" ] && error_missing_value "$name"
        [ -n "$password_origin" ] && \
          error "please specify only one password option."
        app_password="$2"
        password_origin="inline"
        shift 2
        ;;

      --php-version)
        [ -z "$2" ] && error_missing_value "$name"
        php_version="$2"
        shift 2
        ;;

      --no-update)
        unset update_app
        shift
        ;;

      --help)
        usage
        ;;

      --)
        shift
        break
        ;;

      *)
        error "unknown option $name"
        ;;
    esac
  done

  [ -z "$app" ] && error_missing_param app

  if [ -z "$vhost" ]; then
    vhost=$(gen_random_str_az_lower 6)
  fi

  if [ -z "$password_origin" ]; then
    password_origin=random
  fi

  if [ -z "$publisher" ]; then
    publisher=$(get_default_app_publisher) || return $?
  fi

  "$sys_dir/libexec/check-vhost-name" restore "$vhost" || return $?

  app_url=$(get_tarball_url_for_app "$app" "$publisher") || return $?

  if [ "$password_origin" == stdin ]; then
    read -p "Enter app password (stdin): " app_password
    if [ -z "$app_password" ]; then
      error "got an empty password on stdin" -
      return 1
    fi
  elif [ "$password_origin" == inline ]; then
    : # already set $app_password before
  elif [ "$password_origin" == random ]; then
    app_password=$(wedp_gen_random_str 12)
    if [ $? -ne 0 ]; then
      error "unable to generate random password" -
      return 1
    fi
  else
    error "unknown password origin."
  fi

  echo "$app_password" | devpanel_run create vhost --vhost "$vhost" --from "$app_url" \
    ${php_version:+--php-version $php_version} ${desc:+--desc "$desc"} \
    --password-stdin
  if [ $? -ne 0 ]; then
    error "unable to install app" -
    return $?
  fi

  if [ -n "$update_app" ]; then
    devpanel_run update app --vhost "$vhost"
    if [ $? -ne 0 ]; then
      error "unable to update app" -
      return $?
    fi
  fi

  local vhost_url
  vhost_url=$(get_main_url_of_vhost "$vhost")
  echo
  echo "App credentials:"
  echo "  URL: $vhost_url"
  echo "  username: admin"
  echo "  password: $app_password"
  echo
  echo "Successfully installed $app."
}
