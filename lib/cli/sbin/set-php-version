#!/bin/bash

set_usage_msg \
  "Usage: $bin_name ${cmd_ar[*]} [opts] --vhost <vhost> --version <version>

  Options:
    --vhost   <vhost>       the vhost to protect
    --version <version>     the the specified version
    --help                  display the command usage

  Sets the PHP version to be used by the vhost.

  Note: to reset to the system default use 'default' as the version.
"

devpanel_cmd__set_php_version() {
  [ $# -eq 0 -o -z "$1" ] && usage

  local name vhost version
  local -a cmd_args=()

  while [ -n "$1" ]; do
    name="$1"
    case "$name" in
      --vhost)
        [ -z "$2" ] && error_missing_value "$name"
        vhost="$2"
        shift 2
        ;;
      --version)
        [ -z "$2" ] && error_missing_value "$name"
        [ "$2" != default ] && ! is_valid_php_version_string "$2" && return $?
        version="$2"
        shift 2
        ;;
      --help)
        usage
        ;;
      --)
        shift
        break
        ;;
      *)
        error "unknown option $name"
        ;;
    esac
  done

  [ -z "$vhost"   ] && error_missing_param vhost
  [ -z "$version" ] && error_missing_param version

  if ! vhost_exists "$vhost"; then
    error "vhost doesn't exist." -
    return 1
  fi

  load_vhost_config "$vhost" || return $?

  local vhost_user vhost_home
  local php_bin php_cgi_bin phar_bin
  local php_bin_var php_cgi_bin_var phar_bin_var

  vhost_user="$v__vhost__linux_user"
  vhost_home="$v__vhost__linux_user_home"

  php_bin_var="lamp__php_paths__php_${version//./_}"
  php_bin="${!php_bin_var}"
  if [ -z "$php_bin" -o ! -f "$php_bin" -o ! -x "$php_bin" ]; then
    error "unable to find PHP binary for version $version" -
    return 1
  fi

  php_cgi_bin_var="lamp__php_paths__php_cgi_${version//./_}"
  php_cgi_bin="${!php_cgi_bin_var}"
  if [ -z "$php_cgi_bin" -o ! -f "$php_cgi_bin" -o ! -x "$php_cgi_bin" ]; then
    error "unable to find PHP-CGI binary for version $version" -
    return 1
  fi

  phar_bin_var="lamp__php_paths__phar_${version//./_}"
  phar_bin="${!phar_bin_var}"

  if [ "$version" == default ]; then
    if [ -n "$v__php__version" -a \
            "$v__php_version" == "$lamp__php__default_version" ]; then
      echo "Ok, no action. This vhost is already using the default."
      return 0
    fi

    run_as_user "$vhost_user" "rm -f ~/bin/php ~/bin/php-cgi ~/bin/phar"
    if [ $? -eq 0 ]; then
      save_opts_in_vhost_config "$vhost" "- php.version"
      if [ $? -ne 0 ]; then
        echo "Warning: unable to remove PHP metadata" 1>&2
      fi

      echo "Successfully reset PHP version to system default." 1>&2
      return 0
    else
      error "failed to unset defined PHP for vhost $vhost." -
      return 1
    fi
  fi

  run_as_user "$vhost_user" "
               ln -sf $php_cgi_bin ~/bin/php-cgi; ex=\$? ;          \
               ln -sf $php_bin ~/bin/php ;                          \
              [ -n \"$phar_bin\" ] && ln -sf $phar_bin ~/bin/phar ; \
              exit \$ex"
  if [ $? -eq 0 ]; then
    # set metadata for vhost
    if save_opts_in_vhost_config "$vhost" "php.version = $version"; then
      echo "Successfully set vhost PHP version to $version."
    else
      echo "Warning: PHP version set, but failed to update vhost metadata." 1>&2
    fi

    return 0
  else
    error "unable to set PHP link on vhost home" -
    return 1
  fi
}
