#!/bin/bash

set_usage_msg \
  "Usage: $bin_name $action [opts] <--vhost vhost | --domain domain.tld>

  Options:
    --vhost  <vhost>         the vhost
    --domain <domain>        find the vhost associated with the
                             specified domain
    --file <filename>        read crontab contents from the specified file
                             (for STDIN use a dash(-) as the filename)

  Edits the contents of crontab from the specified vhost.

  Note: when the --file is not specified it'll try to open the crontab editor.
"

devpanel_cmd__edit_crontab() {
  local param vhost domain file st
  
  while [ -n "$1" ]; do
    param="$1"

    case $param in
      --vhost)
        [ -z "$2" ] && error_missing_value vhost
        vhost="$2"
        shift 2
        ;;
      --domain)
        [ -z "$2" ] && error_missing_value domain
        domain="$2"
        shift 2
        ;;
      --file)
        [ -z "$2" ] && error_missing_value domain
        file="$2"
        shift 2
        ;;
      --help)
        usage
        ;;
      --)
        shift
        break
        ;;
      *)
        error "unknown parameter: $param"
        ;;
    esac
  done

  if [ $EUID -ne 0 -a -z "$vhost" ]; then
    vhost=$(get_vhost_from_linuxuser ) || return $?
  fi

  if [ $EUID -eq 0 -a -z "$vhost" -a -z "$domain" ]; then
    error "either --vhost or --domain needs to be specified"
  elif [ $EUID -eq 0 -a -n "$vhost" -a -n "$domain" ]; then
    error "can't specify both --domain and --vhost. Use only one."
  fi

  if [ -n "$vhost" ]; then
    if ! vhost_exists "$vhost"; then
      error "vhost doesn't exist." -
      return $?
    fi
  elif [ -n "$domain" ]; then
    vhost=$(get_vhost_with_hostname "$domain")
    if [ $? -ne 0 ]; then
      error "didn't find any vhost with the specified hostname"
    fi
  fi

  if [ -z "$file" -a ! -t 0 ]; then
    error "no input file specified and stdin is not a tty" -
    return $?
  fi

  if [ -n "$file" -a "$file" != - -a ! -f "$file" ]; then
    error "file '$file' doesn't exit." -
    return $?
  fi

  get_linux_username_from_vhost "$vhost" && \
    vhost_user="$_dp_value"
  if [ $? -ne 0 ]; then
    error "unable to get linux user for vhost '$vhost'"
  fi

  if [ -z "$file" ]; then
    if [ $EUID -eq 0 ]; then
      crontab -e -u "$vhost_user"
    else
      crontab -e
    fi
  else
    if [ $EUID -eq 0 ]; then
      cat -- "$file" | crontab -u "$vhost_user"
    else
      cat -- "$file" | crontab
    fi
  fi

  st=$?
  if [ $st -eq 0 ]; then
    echo "Successfully updated crontab contents for vhost $vhost"
  else
    error "unable to update crontab contents for vhost $vhost" -
    return $?
  fi
}
