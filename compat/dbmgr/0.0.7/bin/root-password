#!/usr/bin/perl -w
# grg@openwall.com
# get root password (based on daemon-start)

#
# Usage: daemon-start --user --type --version --datadir --ip --port --limits --contact --comment --interactive --all
#
use strict;
use FindBin;
use lib "$FindBin::Bin/../lib";

use dbMgr::Log;
use dbMgr::Config;
use POSIX 'setsid';
use Socket;
use Cwd 'abs_path';
use Getopt::Long;
use Dumpvalue;

my $interactive = 0;
my %options = ();

# Sys::Syslog::setlogsock('unix');
my $log = new dbMgr::Log($FindBin::Script, 'pid,cons,nowait', 'user');	$log->debug("initializing");
my $bin_dir = "$FindBin::Bin/";					$log->debug("bin_dir = '%s'", $bin_dir);
my $etc_dir = abs_path("$bin_dir/../../config") . "/";		$log->debug("etc_dir = '%s'", $etc_dir);
my $config = new dbMgr::Config($etc_dir);			$log->debug("configuration files were parsed successfully");

sub help {
    print "\
Usage: " . $FindBin::Script . "[options]

Options:

--interactive|-i	Interactive mode
--user|-u		System account for database daemon
--type|-t		Database type
--version|-v		Database version
--datadir|-d		Database daemon data dirictory
--host|-h		Database daemon host
--port|-p		Database daemon port
--limits|-l		Database daemon limits (unimplemented)
--contact|-c		Contact person (unimplemented)
--comment|-z		Database daemon comment (unimplemented)
--help|-?		This help

";
exit 0

}

my $result = GetOptions(
	"interactive|i!"	=> \$interactive,
	"user|u=s"		=> \$options{user},
	"type|t=s"		=> \$options{type},
	"version|v=s"		=> \$options{version},
	"datadir|d=s"		=> \$options{datadir},
	"host|h=s"		=> \$options{host},
	"port|p=i"		=> \$options{port},
#	"limits|l=s"		=> \$options{limits},
#	"contact|c=s"		=> \$options{contact},
#	"comment|z=s"		=> \$options{comment},
	"help|?"		=> sub { &help; }
			);

# Add slash if missing
unless (!defined($options{datadir}) || ($options{datadir} =~ /\/$/)) {
    $options{datadir} .= "/";
}

my $work_config = $config->select("user", "."); # Clone config

foreach my $key (keys %options) {
    if (defined $options{$key}) {
	$work_config = $work_config->select($key, "^" . $options{$key} . "\$");
    }
}

unless (defined($work_config->{daemons})) {
    print "Warning: no daemons defined to work with, bailing out\n";
    exit 1;
}

# $work_config->dump_config();

$work_config->foreach(sub { print $_[0]->{password}, "\n"; });
