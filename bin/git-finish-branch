#!/bin/bash

usage() {
  echo "Usage: `basename "$0"` <-d git_dir> <-m main_branch> <-f forked_branch>

  Options:
    -d git_dir            the git_dir to use
    -m branch             merge into this branch
    -f forked_branch      forked branch that will be merged back
"
  exit 1

}

[ $# -eq 0 ] && usage

getopt_flags="d:m:f:"
while getopts $getopt_flags OPTF; do
  case $OPTF in
    d)
      git_dir="$OPTARG"
      if [ ! -e "$git_dir" ]; then
        echo "Error: dir '$git_dir' doesn't exist." 1>&2
        exit 1
      elif [ ! -d "$git_dir" ]; then
        echo "Error: path '$git_dir' is not a directory" 1>&2
        exit 1
      fi
      ;;
    m)
      main_branch="$OPTARG"
      ;;
    f)
      forked_branch="$OPTARG"
      ;;
    *)
      exit 1
      ;;
  esac
done

GIT_DIR="$git_dir" git fetch origin "$main_branch"
if [ $? -ne 0 ]; then
  echo "Error: unable to fetch branch '$main_branch' from origin" 1>&2
  exit 1
fi

GIT_DIR="$git_dir" git checkout "$main_branch"
if [ $? -ne 0 ]; then
  echo "Error: unable to checkout branch '$main_branch'" 1>&2
  exit 1
fi

# track the branch, required for the simple checkout below
GIT_DIR="$git_dir" git branch -t "$main_branch"

GIT_DIR="$git_dir" git merge --no-ff "$forked_branch"
if [ $? -ne 0 ]; then
  echo "Error: unable to merge '$forked_branch' into '$main_branch'" 1>&2
  exit 1
fi

GIT_DIR="$git_dir" git push origin "$main_branch"
if [ $? -ne 0 ]; then
  echo "Error: unable to push branch '$main_branch' to origin server" 1>&2
  exit 1
fi

GIT_DIR="$git_dir" git push origin :"$forked_branch"
if [ $? -ne 0 ]; then
  echo "Warning: unable to delete remote branch '$forked_branch'" 1>&2
  exit 0
fi

GIT_DIR="$git_dir" git branch -d "$forked_branch"
if [ $? -ne 0 ]; then
  echo "Warning: unable to delete local branch '$forked_branch'" 1>&2
  exit 0
fi
