#!/bin/bash

usage() {
  echo "Usage: `basename "$0"` [ options ] -- <rsync_args>

  Options:
    -I                include the system default filters
    -u                search for the user filters in ~/.devpanel/.rsync-filters
    -i <file>         read filters from the specified file
"
  exit 1
}

# main

[ $# -eq 0 ] && usage

unset include_system_filters include_file search_user_filters
unset default_filter_file user_filters user_global_filters 

getopt_flags='Iui:'
while getopts $getopt_flags OPTN; do
  case "$OPTN" in
    I)
      include_system_filters=1
      ;;
    i)
      include_file="$OPTARG"
      if [ ! -e "$include_file" ]; then
        echo "Error: include file path '$include_file' doesn't exist." 1>&2
        exit 1
      fi
      ;;
    u)
      search_user_filters=1
      ;;
    *)
      exit 1
      ;;
  esac
done
[ $OPTIND -gt 1 ] && shift $(( $OPTIND - 1 ))

dir=`dirname "${BASH_SOURCE[0]}"`
real_path=`readlink -e "$dir"`
if [ -n "$include_system_filters" -a -z "$real_path" ]; then
  echo "Error: unable to determine the current directory" 1>&2
  exit 1
fi

if [ -n "$include_system_filters" -a -e "$real_path/../config/rsync-site-filters" ]; then
  default_filter_file="$real_path/../config/rsync-site-filters"
fi

if [ -n "$search_user_filters" ]; then
  if [ -e "$HOME/.devpanel/.rsync-filters" ]; then
    user_filters="$HOME/.devpanel/.rsync-site-filters"
  fi

  if [ -e "$real_path/../config/rsync-site-filters.local" ]; then
    user_global_filters="$real_path/../config/rsync-site-filters.local"
  fi
fi

rsync ${default_filter_file:+-f '. '"$default_filter_file"} \
  ${user_filters:+-f '. '"$user_filters"} \
  ${user_global_filters:+-f '. '"$user_global_filters"} \
  -av "$@"
