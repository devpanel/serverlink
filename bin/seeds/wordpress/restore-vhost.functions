wordpress_get_users() {
  sql_query_result "select user_login from wp_users where user_login <> ''"
}

wordpress_genpass() {
  "$dir/genpass"
}

wordpress_encrypt() {
  local password="$1"
  echo -n "$password"|"$dir/wordpress-crypt.php"
}

wordpress_set_password() {
  local user="$1"
  local encrypted_password="$2"
  local salt

  sql_query "update wp_users set user_pass = '$encrypted_password' where user_login = '$user';"
}

wordpress_set_email() {
  local user="$1"
  local email="$2"

  sql_query "update wp_users set user_email = '$email' where user_login = '$user';"
}

wordpress_set_site_email() {
  local email="$1"

  sql_query "update wp_options set option_value='$email' where option_name='admin_email'"
}

wordpress_get_email() {
  local user="$1"

  sql_query_result "select user_email from wp_users where user_login = '$user'"
}

wordpress_get_admin_user() {
  sql_query_result "select user_login from wp_users where user_login = 'admin'"
}

wordpress_set_urls()
{
  sql_query "update wp_options set option_value='http://$fqdn' where option_name='siteurl'"
  sql_query "update wp_options set option_value='http://$fqdn' where option_name='home'"
}

wordpress_set_sitename()
{
  local name="$1"
  local name_esc=$(escape_quotes "$name")
  sql_query "UPDATE wp_options SET option_value = '$name_esc' WHERE option_name = 'blogname';"
}

wordpress_update_define_line() {
  # update lines containing: define('key', 'value');  with the new values
  local key="$1"
  local value="$2"

  local key_esc=$(escape_sed "$key")
  local value_esc=$(escape_sed "$value")

  local sed_str="s/define([[:space:]]*['\"]$key_esc['\"][[:space:]]*,[[:space:]]*['\"][^'\"]\+['\"][[:space:]]*)[[:space:]]*\;/define('$key_esc', '$value_esc')\;/g;"

  printf '%s' "$sed_str"
}

wordpress_update_php_config()
{

  local sed_str="" key="" value=""
  if [ -n "$initial_deployment" ]; then
    local AUTH_KEY=$(wedp_gen_random_str 64)
    local SECURE_AUTH_KEY=$(wedp_gen_random_str 64)
    local LOGGED_IN_KEY=$(wedp_gen_random_str 64)
    local NONCE_KEY=$(wedp_gen_random_str 64)
    local AUTH_SALT=$(wedp_gen_random_str 64)
    local SECURE_AUTH_SALT=$(wedp_gen_random_str 64)
    local LOGGED_IN_SALT=$(wedp_gen_random_str 64)
    local NONCE_SALT=$(wedp_gen_random_str 64)

    local key
    for key in AUTH_KEY SECURE_AUTH_KEY LOGGED_IN_KEY NONCE_KEY \
               AUTH_SALT SECURE_AUTH_SALT LOGGED_IN_SALT NONCE_SALT; do
      value="${!key}"
      sed_str+=$(wordpress_update_define_line "$key" "$value")
    done
  fi

  local DB_USER="$mysql_user"
  local DB_PASSWORD="$mysql_password"
  local DB_HOST="$mysql_host:$mysql_port"
  local DB_NAME="$hosting_database"

  for key in DB_USER DB_HOST DB_NAME DB_PASSWORD; do
    value="${!key}"
    sed_str+=$(wordpress_update_define_line "$key" "$value")
  done

  echo "$sed_str" | run_ised "$home/public_html/$vhost/wp-config.php"
}

wordpress_set_upload_path()
{
  sql_query "update wp_options set option_value = '$home/public_html/$vhost/wp-content/uploads' where option_name = 'upload_path'" || return 1
}

wordpress_custom() {
  if [ -n "$initial_deployment" ]; then
    wordpress_set_urls

    if [ -n "$email" ]; then
      wordpress_set_site_email "$email"
    fi

    if [ -n "$site_title" ]; then
      wordpress_set_sitename "$site_title"
    fi

    echo "Setting upload path"
    wordpress_set_upload_path
  fi

  echo "Updating wp-config.php"
  wordpress_update_php_config
}

wordpress_clear_cache() {
  wp-cli --path="$home/public_html/$vhost" cache flush
}

wordpress_download_from_cli() {
  local version="${1:-latest}"

  wp-cli --path="$public_html_dir" core download --version="$version"
}

wordpress_setup_from_git() {
  local title=${site_title:-"Wordpress"}
  local admin_email=${email:-"devnull@webenabled.com"}
  local password=$(generate_password) # also uses one from stdin if opt specified

    wp-cli --path="$public_html_dir" core config --dbname="$database" \
      --dbuser="$mysql_user" --dbpass="$mysql_password" \
      --dbhost="$mysql_host:$mysql_port"

  if [ -n "$initial_deployment" ]; then
    wp-cli --path="$public_html_dir" core install --url="$fqdn" --title="$title" \
      --admin_user=admin --admin_password="$password" \
      --admin_email="$admin_email" --skip-email
    return $?
  fi

  return 0
}

wordpress_setup_from_cli() {
  wordpress_setup_from_git "$@"
}
