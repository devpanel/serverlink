moodle_sed_escape() {
  local input="$1"
  local escaped

  escaped=$(printf "%s" "$input" | sed 's|/|\\/|g; s|\$|\\$|g')

  printf "%s" "$escaped"

}

moodle_get_users() {
  sql_query_result "SELECT username FROM mdl_user where username <> ''"
}

moodle_genpass() {
  "$dir/genpass"
}

moodle_encrypt() {
  local password="$1"
  echo -n "$password"|"$dir/moodle-crypt.php"
}

moodle_set_password() {
  local user="$1"
  local encrypted_password="$2"

  sql_query "UPDATE mdl_user SET password = '$encrypted_password' WHERE username = '$user';"
}

moodle_set_email() {
  local user="$1"
  local email="$2"

  sql_query "UPDATE mdl_user SET email = '$email' WHERE username = '$user';"
}

moodle_get_email() {
  local user="$1"
  sql_query_result "SELECT email FROM mdl_user WHERE username = '$user'"
}

moodle_get_admin_user() {
  #sql_query_result "SELECT mdl_user.username FROM mdl_user, mdl_config WHERE mdl_config.name = 'siteadmins' AND mdl_user.id = SUBSTR(mdl_config.value, 1, INSTR(mdl_config.value, ',') - 1 )"
  sql_query_result "SELECT username FROM mdl_user WHERE username = 'admin'"
}

moodle_update_config() {
  local epoch_now=$(date +%s)
  local base_url=${WEBENABLED_HOSTING_LINK_BASE_URL:-"http://$fqdn"}
  local dataroot=$(moodle_sed_escape "$home/public_html/moodledata")  
  base_url=$(moodle_sed_escape "$base_url")

  echo "
    s/^\(\$CFG->dbhost\) *= *'.*'\;/\1 = '$mysql_host'\;/;
    s/^\(\$CFG->dbname\) *= *'.*'\;/\1 = '$hosting_database'\;/;
    s/^\(\$CFG->dbuser\) *= *'.*'\;/\1 = '$mysql_user'\;/;
    s/^\(\$CFG->dbpass\) *= *'.*'\;/\1 = '$mysql_password'\;/;
    s/^\(\$CFG->wwwroot\) *= *'.*'\;/\1 = '$base_url'\;/;
    s/^\(\$CFG->directorypermissions\) *= *.\+\;/\1 = 0755\;/;
    s/^\(\$CFG->dataroot\) *= *'.*'\;/\1 = '$dataroot'\;/;
    s/^ini_set([\"']mysqli.default_port[\"'].\+/ini_set('mysqli.default_port', $mysql_port)\;/;
    " | run_ised_p "$home/public_html/$vhost/config.php"

  # moodle uses mysqli, which doesn't accept the host:port syntax as mysql
  # addr and the installation doesn't allow to set an alternate port
  # so, a workaround solution is to set the mysqli port in php.ini

  #  if port is already configured, just change it
  if egrep -q '^[ \t]*mysqli.default_port[ \t]*=' "$home/.php/php.ini"; then
    echo "
    s/^\(mysqli.default_port\) *= *.*/\1 = $mysql_port\;/;
    " | run_ised_p "$home/.php/php.ini"
  else # otherwise add it to php.ini
    echo "mysqli.default_port = $mysql_port;" >> "$home/.php/php.ini"
  fi
}

moodle_custom() {
  if [ -z "$opt_n" ]; then
    sql_clear_table mdl_sessions
  fi

  moodle_update_config
}

