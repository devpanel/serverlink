#!/bin/bash

usage() {
  local prog=$(basename "$0")
  echo "This program is expected to be used through ssh forced commands."
  exit 1
}

[ -z "$SSH_ORIGINAL_COMMAND" ] && usage

self_bin=$(readlink -e "$0")
if [ $? -ne 0 ]; then
  echo "Error: unable to determine self path" 1>&2
  exit 1
fi
self_dir=$(dirname "$self_bin")
sys_dir=$(readlink -e "$self_dir/..")
if [ $? -ne 0 ]; then
  echo "Error: unable to determine system dir" 1>&2
  exit 1
fi

lib_f="$sys_dir/lib/functions"
if ! source "$lib_f"; then
  echo "Error: unable to import $lib_f" 1>&2
  exit 1
fi
load_devpanel_config || exit $?

command=${SSH_ORIGINAL_COMMAND%% *}
cmd_args=${SSH_ORIGINAL_COMMANDS#* }

case "$command" in
  site_sync_recv_files)
    vhost_dir=$(get_docroot_from_user)
    if [ $? -ne 0 ]; then
      error "unable to get docroot for user"
    elif [ ! -d "$vhost_dir" ]; then
      error "directory '$vhost_dir' does not exist."
    fi

    rsync --server -vvlogDtpr . "$vhost_dir"
    st=$?
    if [ $st -eq 0 ]; then
      "$sys_dir/bin/restore-vhost-subsystem" -n
      st=$?
    fi
    ;;
  sync-db-from-split-dump)
    "$sys_dir/bin/mysql-import-split-dump" -o - -
    st=$?
    ;;
   *)
    echo "Unknown command" 1>&2
    st=1
    ;;
esac

exit $st
