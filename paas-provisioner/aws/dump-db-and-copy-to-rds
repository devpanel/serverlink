#!/bin/bash

error() {
  local msg="$1"
  local exit_code="${2:-1}"

  [ -n "$msg" ] && echo "Error: $msg" 1>&2
  exit $exit_code
}

usage() {
  echo "Usage: `basename "$0"` <vhost> <source_db_name> <target_db_name>
"
  exit 1
}

# main

[ $# -lt 2 ] && usage

self_bin=`readlink -e "$0"`
curr_dir=`dirname "$self_bin"`
we_base_dir=`readlink -e "$curr_dir/../.."`
lib_file="$we_base_dir/lib/functions"

if ! source "$lib_file"; then
  error "unable to source lib file $lib_file"
fi

local_vhost="$1"
source_db_name="$2"
target_db_name="$3"

vhost_user="w_$local_vhost"
if ! getent passwd "$vhost_user" &>/dev/null; then
  error "unable to get information about user $vhost_user"
fi
vhost_home=`eval echo \~"$vhost_user"`
my_cnf_file="$vhost_home/.my.cnf"
if [ ! -e "$my_cnf_file" ]; then
  error "missing $my_cnf_file"
fi

temp_file=`mktemp`
if [ $? -ne 0 ]; then
  error "unable to create temporary file"
fi
trap 'rm -f "$temp_file"' EXIT

mysqldump --defaults-file="$my_cnf_file" "$source_db_name" >"$temp_file"
if [ $? -ne 0 ]; then
  error "unable to dump database"
fi

# by this architecture only the web servers have access to the db
# so we'll try to import the db from the first web server that works
ip_list=`"$curr_dir/get-cluster-webserver-ips"`
if [ $? -ne 0 ]; then
  error "unable to get the list of web server IPs"
fi

unset success
target_file="/tmp/`basename "$temp_file"`"
for ip in $ip_list; do

  if scp "$temp_file" "root@$ip:$target_file"; then
    ssh "root@$ip" /opt/webenabled/paas-provisioner/aws/mysql-copy-db \
     -s "$local_vhost" "$target_db_name" "$target_file" \; rm -f -- "$target_file"
    if [ $? -eq 0 ]; then
      success=1
      break
    fi
  fi
done

if [ -n "$success" ]; then
  echo "Successfully imported database."
  exit 0
else
  echo "Failed to import database." 1>&2
  exit 1
fi
