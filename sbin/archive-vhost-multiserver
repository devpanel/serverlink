#!/bin/sh
# multi-server version
# Usage:
#   archive-vhost-multiserver [OPTIONS] source_vhost target_vhost label
# Options:
# -P -- save shadow entry

dir=`dirname "$0"`
options=""
opt_i=0

while getopts "P" OPTOPT
do
  case "$OPTOPT" in
    P) options="${options+ }-P";;
    *) exit 1;
  esac
done
shift `expr $OPTIND - 1`

source_server=localhost
target_server=localhost
[ -n "$WEBENABLED_SERVER" ] && source_server=$WEBENABLED_SERVER
[ -n "$WEBENABLED_SERVER" ] && target_server=$WEBENABLED_SERVER
[ -n "$WEBENABLED_SOURCE_SERVER" ] && source_server=$WEBENABLED_SOURCE_SERVER
[ -n "$WEBENABLED_TARGET_SERVER" ] && target_server=$WEBENABLED_TARGET_SERVER
unset WEBENABLED_SERVER

error()
{
  echo "ERROR${1+: }$@" >&2
  exit 1
}

usage()
{
  echo "Usage: archive-vhost-multiserver [OPTIONS] SOURCE_VHOST TARGET_VHOST LABEL" >&2
  exit 1
}

[ $# = 3 ] || usage

source="$1"
target="$2"
label="$3"
target_supports_auth_tmp=0
source_supports_auth_tmp=0
key=""

remove_auth_tmp_private()
{
  if [ $target_supports_auth_tmp  = 1 ] && [ -n "$key" ]
  then
    #echo remove_auth_tmp_private
    echo "$key"|WEBENABLED_SERVER="$target_server" $dir/remove-auth-tmp-private || echo "failed (ignoring)"
  fi
}

remove_auth_tmp_authorized_keys()
{
  if [ $source_supports_auth_tmp  = 1 ] && [ -n "$key" ]
  then
    #echo remove_auth_tmp_authorized_keys
    echo "$key" | WEBENABLED_SERVER="$source_server" $dir/remove-auth-tmp-authorized_keys || echo "failed (ignoring)"
  fi
}

if key=`WEBENABLED_SERVER="$target_server" $dir/config-auth-tmp-keygen`
then
  echo target_supports_auth_tmp=1
  target_supports_auth_tmp=1
  trap 'remove_auth_tmp_private' \
    EXIT HUP INT QUIT ILL TRAP ABRT BUS FPE KILL SEGV PIPE STOP ALRM TERM
else
  echo target_supports_auth_tmp=0
fi


if [ $target_supports_auth_tmp = 1 ]
then
  if echo "$key" | WEBENABLED_SERVER="$source_server" $dir/config-auth-tmp-authorized_keys
  then
    echo source_supports_auth_tmp=1
    source_supports_auth_tmp=1
    trap 'remove_auth_tmp_private; remove_auth_tmp_authorized_keys' \
      EXIT HUP INT QUIT ILL TRAP ABRT BUS FPE KILL SEGV PIPE STOP ALRM TERM
  else
    echo source_supports_auth_tmp=0
  fi
fi

if [ $source_supports_auth_tmp = 1 ] && [ $target_supports_auth_tmp = 1 ]
then
  echo Archive stage 0: direct transfer between $source_server and $target_server using tmp auth
  echo "$key" | WEBENABLED_SERVER="$target_server" $dir/archive-vhost-multiserver-proxy -i -S "$source_server" $options "$source" "$target" "$label" || error

else
  if ! TMPFILE="`mktemp -t archive_vhost-multiserver.XXXXXXXXXX`"
  then
    echo "ERROR: mktemp failed";
    exit 1
  fi
  trap 'remove_auth_tmp_private; remove_auth_tmp_authorized_keys; echo "Removing temporary archive $TMPFILE"; rm -f -- "$TMPFILE"' \
    EXIT HUP INT QUIT ILL TRAP ABRT BUS FPE KILL SEGV PIPE STOP ALRM TERM
  
  echo "Archive stage 1: archive $source to $TMPFILE"
  if ! WEBENABLED_SERVER="$source_server" $dir/archive-vhost $options "$source" - >>"$TMPFILE"
  then
    echo ERROR >&2
    exit 1
  fi
    
  echo "Archive stage 2: store $TMPFILE as $label on $target"
  WEBENABLED_SERVER="$target_server" $dir/archive-vhost-store -u "$target" "$label" <"$TMPFILE" || error
  echo Done
fi
