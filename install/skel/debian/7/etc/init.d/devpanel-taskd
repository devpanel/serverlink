#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          devpanel_taskd
# Required-Start:    $network
# Required-Stop:     $network
# Should-Start:      $remote_fs
# Should-Stop:       $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DevPanel task fetcher and reporter agent
# Description:       This program fetches tasks from DevPanel and report
# back it's status information to the remote controller
### END INIT INFO

usage() {
  echo "Usage: $0 <start|stop|status>"
  exit 1
}

taskd_start() {
  local args="$@"

  if [ ${#args[*]} -gt 0 ] ; then
    start_daemon "$devpanel_dir/sbin/taskd" "$args"
  else
    start_daemon "$devpanel_dir/sbin/taskd"
  fi

  return $?
}

taskd_status() {
  status_of_proc -p "$pid_file" "taskd" "DevPanel taskd"
}

dp_daemon_name="taskd"
pid_file="/var/run/$dp_daemon_name.pid"

# main
[ $# -eq 0 ] && usage

if ! source /lib/lsb/init-functions ; then
  echo "Error: unable to import lsb init functions from '/lib/lsb/init-functions'" 1>&2
  exit 1
fi

if [ -f "/etc/default/devpanel" ] && ! source "/etc/default/devpanel"; then
  log_failure_msg "unable to source file '/etc/default/devpanel'"
fi

devpanel_dir="${devpanel_dir:-/opt/webenabled}"
taskd_cmd_args=${taskd_cmd_args:-""}

declare -l action="$1"

case "$action" in
  start)
    taskd_start "$taskd_cmd_args"
    status=$?
    log_end_msg $status
    ;;

  stop)
    killproc -p "$pid_file"
    ;;

  reload|restart)
    if ! pidofproc -p "$pid_file"; then
      log_failure_msg "DevPanel taskd is not running"
      exit $?
    fi

    killproc -p "$pid_file" && sleep 1 && taskd_start "$taskd_cmd_args"
    log_end_msg $status
    ;;

  status)
    taskd_status
    ;;
esac
