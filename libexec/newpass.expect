#!/usr/bin/perl
use Expect;
my $user = shift;
defined $user && $user ne '' or die "Usage: $0 USER\n";
my $uid = getpwnam $user;
die "no such user\n" unless defined $uid;
die "will not change superuser's password\n" unless $uid > 0;
die "will only change passwords for w_* users" unless $user =~ /^w_/ && $user ne 'w_we1';
my $exp = new Expect;
$exp->spawn('/usr/bin/passwd', $user);
$exp->log_stdout(0);
my $pattern = '\npick this as your password: "([^"]*)"\.\r?\n';
my ($position, $error, $match) = $exp->expect(5, '-re', $pattern) 
  or die "password generation failed\n";
die unless $position == 1;
my $password = ($exp->matchlist)[0];
die "empty password" if $password eq '';
sleep 1;
$exp->send("$password\n");
$exp->expect(5, "\nRe-type new password:") or die "new password not accepted\n";
$exp->send("$password\n");
$exp->expect(5, 'passwd: all authentication tokens updated successfully') 
  or die "repeated new password not accepted\n";
$exp->soft_close();
$exp->exitstatus == 0 or die "passwd exit status is non-zero\n";
print "$password\n";
