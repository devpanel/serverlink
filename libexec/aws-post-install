#!/bin/bash

usage() {
  echo "Usage: ${0##*/} -Y

  Performs several post install adjustments on the server.
"
  exit 1
}

unset confirmed
getopt_flags='Y'
while getopts $getopt_flags OPTN; do
  case $OPTN in
    Y)
      confirmed=1
      ;;
    *)
      usage
      ;;
  esac
done
[ $OPTIND -gt 1 ] && shift $(( $OPTIND - 1 ))

[ -z "$confirmed" ] && usage

self_bin=$(readlink -e "$0")
if [ $? -ne 0 ]; then
  echo "Error: unable to detect self path" 1>&2
  exit 1
fi
self_dir=${self_bin%/*}
sys_dir=${self_dir%/*}
lib_file="$sys_dir/lib/functions"

if ! source "$lib_file"; then
  echo "Error: unable to load lib file $lib_file" 1>&2
  exit 1
fi

distro=$(devpanel_auto_detect_distro)
if [ $? -ne 0 ]; then
  error "unable to detect linux distribution"
fi

# disable blocking of root login (done on boot)
cloud_init_cfg="/etc/cloud/cloud.cfg"
if [ -f "$cloud_init_cfg" ]; then
  sed -i -e 's/^disable_root:[[:space:]]\+true.*/disable_root: false/;' \
    "$cloud_init_cfg"
fi

# allow root login and password-based logins on SSH
sshd_config="/etc/ssh/sshd_config"
if [ -f "$sshd_config" ]; then
  sed -i -e '
    s/^PermitRootLogin[[:space:]]\+.\+/PermitRootLogin yes/;
    s/^PasswordAuthentication[[:space:]]\+.\+/PasswordAuthentication yes/;
  ' "$sshd_config"

  if [ "$distro" == ubuntu -o "$distro" == debian ]; then
    "$sys_dir/libexec/system-services" ssh restart
  elif [ "$distro" == centos -o "$distro" == redhat ]; then
    "$sys_dir/libexec/system-services" sshd restart
  fi
fi

# remove the initial blocking on root login
root_key_file=$(readlink -e ~root/.ssh/authorized_keys)
if [ -n "$root_key_file" -a -s "$root_key_file" ]; then
  cp /dev/null "$root_key_file"
fi

if [ "$distro" == ubuntu ]; then
  passwd -d ubuntu
elif [ "$distro" == centos -o "$distro" == redhat ]; then
  passwd -d ec2-user
fi

exit 0
