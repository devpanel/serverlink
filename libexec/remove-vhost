#!/bin/bash

# Options:
# -P -- save shadow entry


exec 3>&1
exec 1>&2

error()
{
  echo "ERROR${1+: }$@" >&2
  exit 1
}

usage() {
  local prog=$(basename "$0")

  echo "Usage: $prog <vhost> [archive_name]

  This script removes the specified vhost from the system.
"
  exit 1
}

run()
{
  echo "  Running $@"
  "$@"
}

revert_disable_vhost() {
  echo "Re-enabling vhost..."

  "$dir/config-vhost-apache" "$vhost"
  if [ $? -eq 0 ]; then
    echo "Successfully re-enabled vhost $vhost"
  fi
}

# main
archive_vhost_web_options=""
check_archive_pathname_options=""
webenabled_backwards=""

while getopts "PuU" OPTOPT
do
  case "$OPTOPT" in
    P) archive_vhost_web_options="${archive_vhost_web_options+ }-P";;
    u) : ;; # option removed, left here until we update all references to it
    U) archive_vhost_web_options="${archive_vhost_web_options+ }-U" ;;
    *) exit 1;
  esac
done
[ $OPTIND -gt 1 ] && shift `expr $OPTIND - 1`

self_bin=$(readlink -e "$0")
dir=`dirname "$self_bin"`
sys_dir=$(readlink -e "$dir/..")

vhost="$1"
archive_to="$2"
if [ -z "$archive_to" ]; then
  archive_to="@removed_vhosts_dir@/@vhost@/@archive_template_str@"
else
  if [ "$archive_to" != "-" -a "${archive_to:0:1}" != @ -a "${archive_to:0:1}" != / ]; then
    archive_to="@removed_vhosts_dir@/@vhost@/$archive_to"
  fi
fi

user_db="b_$vhost"
user_web="w_$vhost"

"$dir/check-vhost-name" archive "$vhost" || exit 1

lib_file="$sys_dir/lib/functions"
if ! source "$lib_file"; then
  echo "Error: unable to source lib file $lib_file" 1>&2
  exit 1
fi

vhost_config_dir="$sys_dir/config/vhosts/$vhost"
vhost_cache_dir="$sys_dir/var/cache/vhost/$vhost"
apache_base_log_dir=$(deref_os_fs_path "$sys_dir" pathnames/var/log/apache_vhosts)
[ -n "$apache_base_log_dir" ] && apache_log_dir="$apache_base_log_dir/$user_web"

if deref_os_prop "$sys_dir" webenabled_backwards &>/dev/null; then
  webenabled_backwards=1
fi

"$dir/config-vhost-apache" -D "$vhost" || exit 1
trap 'revert_disable_vhost' EXIT

# if $archive_to not equal "-" then archive it before removing
if [ -n "$archive_to" -a "$archive_to" != "-" ]; then
  if [ -n "$webenabled_backwards" ]; then
    old_data_dir="$sys_dir/data/"
    old_data_dir_size=${#old_data_dir}
    if [ ${#archive_to} -gt $old_data_dir_size ]; then
      if [ ${archive_to:0:$old_data_dir_size} == "$old_data_dir" ]; then
        # if $archive_to starts with /opt/webenabled/data then archive to
        #   removed_vhosts/...
        archive_to="@removed_vhosts_dir@/@vhost@/${archive_to:$old_data_dir_size}"
      fi
    fi
  fi

  "$dir/archive-vhost" -C -G $archive_vhost_web_options "$vhost" "$archive_to"
  [ $? -ne 0 ] && exit 1
fi

trap - EXIT # at this point revert_* doesn't make sense anymore

# Removing database related stuff
if ! `id -u "$user_db" 2>/dev/null >/dev/null`
then
  echo "Skipping db (no such user $user_db)"
else
  echo Removing database related things...

  dbmgr_dir="$sys_dir/config/os/pathnames/opt/dbmgr"
  file1="$dbmgr_dir/config/db-daemons.conf"
  file2="$dbmgr_dir/config/db-shadow.conf"
  instance_conf_dir="$dbmgr_dir/config/mysql/$user_db"

  echo "Commenting out the entries in db-daemons.conf and db-shadow.conf:"
  run sed -i.old "s/^$user_db:/#&/" "$file1"
  #grep "$user" $file1 | sed 's/^/  /'
  run sed -i.old "s/^$user_db:/#&/" "$file2"

  rm -v -rf "$instance_conf_dir"

  "$dir/remove-user" "$user_db"

  if [ $? -ne 0 ]; then
    error "unable to remove database"
  fi
fi

# Removing web related stuff
echo "Removing web things..."

if [ -n "$apache_log_dir" -a -d "$apache_log_dir" ]; then
  echo "Removing apache log files"
  run rm_rf_safer "$apache_log_dir"
fi

echo "Removing webenabled config dir"
run rm_rf_safer "$vhost_config_dir"

if [ -d "$vhost_cache_dir" ]; then
  echo "Removing cache dir $vhost_cache_dir"
  run rm_rf_safer "$vhost_cache_dir"
fi

echo "Removing cron for $user_web"
run crontab -u "$user_web" -r

echo "Removing the user $user_web"
run "$dir/remove-user" "$user_web" || exit 1

echo "Removing the group $user_web"
run groupdel "$user_web" || true

echo
echo "Successfully removed vhost $vhost"
