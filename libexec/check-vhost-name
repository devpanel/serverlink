#!/bin/bash

error()
{
  echo "ERROR${1+: }$@" >&2
  exit 1
}

exists()
{
  id "$1" >/dev/null 2>&1
  return $?
}

locked() {
  ! is_vhost_enabled "$vhost"
}

usage() {
  echo "Usage: ${0##*/} [archive|restore|lock|unlock|config|name-only] basename"
  exit 1
}

# main

declare -i max_vhost_length=6

[ $# -eq 0 -o -z "$1" ] && usage

mode="$1"
[ $# = 2 ] && case "$mode" in archive|restore|lock|unlock|config|name-only) true;; *) false;; esac || 
  usage

self_bin=`readlink -e "$0"`
dir=${self_bin%/*}
devpanel_dir=${dir%/*}

lib_file="$devpanel_dir/lib/functions"
for inc_file in "$lib_file"; do
  if ! source "$inc_file"; then
    error "unable to source file '$inc_file'"
  fi
done
load_devpanel_config || exit $?

if is_longer_vhost_names_enabled ; then
  max_vhost_length=30
fi

vhost="$2"
if vhost_exists "$vhost"; then
  load_vhost_config "$vhost" || exit $?

  w_user="$v__vhost__linux_user"
  b_user="b_${w_user#w_}"
  home="$v__vhost__linux_user_home"
fi

(echo "$vhost"|egrep -q "^[-_a-z0-9]{1,$max_vhost_length}\$")||error "invalid vhost name '$vhost'"

apache_config_dir="$lamp__paths__vhosts_config_dir"
if [ "$mode" == "name-only" ]; then
  exit 0
elif [ $mode = restore ]; then
  if vhost_exists "$vhost"; then
    error "vhost '$vhost' already exists."
  fi

  exists "$w_user" && error "$w_user must not exist"
  exists "$b_user" && error "$b_user must not exist"
else
  if ! vhost_exists "$vhost"; then
    error "vhost '$vhost' doesn't exist."
  fi

  exists "$w_user" || error "$w_user must exist"
  [ -d "$home" ] || error "home dir $home must exist"
  owner=`stat --format %U "$home"` || error
  [ o"$owner" = o"$w_user" ] || error "$home must be owned by $w_user"
  [ $mode = lock -o $mode = config ] && locked && error "$vhost must not be locked"
  [ $mode = unlock ] && ! locked && error "$home must be locked"
  # it's ok to archive both locked and unlocked vhosts
fi

exit 0
