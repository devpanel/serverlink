#!/bin/bash
# Options:
#   -a list all settings (ip, ssl)
error() { echo "ERROR${@+: }$@" >&2; exit 1; }
run()
{
  echo "  running $@"
  "$@"
}
dir=`dirname $0`
opt_a=0
while getopts "a" OPTOPT
do
  case "$OPTOPT" in
    a) opt_a=1;;
    *) exit 1;;
  esac
done
shift `expr $OPTIND - 1`
vhost="$1"
user="w_$vhost"
$dir/check-vhost-name archive "$vhost" || error
if ! default_domain=`cat /opt/webenabled/config/names/default` || [ -z "$default_domain" ] 
then
  error "No default domain"
fi

config_dir="/opt/webenabled/config/vhosts/$vhost"
name_dir="$config_dir/names"
cd "$name_dir" || error "No names defined" 
names=""
default_name=`readlink "$name_dir/default"`
if [ -z "$default_name" ]
then
  echo $vhost.$default_domain
else
  output()
  {
    for path in `find . '!' -type d`
    do
      d=`dirname "$path"`
      ip=""
      [ o"$d" = o"." ] || ip=`basename "$d"`
      i=`basename "$path"`
      [ o"$i" = o"default" ] && continue
      if [ $opt_a = 1 ] && [ -n "$ip" ]
      then
        keywords=""
        if [ -e "$config_dir/ssl/ip/$ip" ]
        then
           keywords="$keywords${keywords+ }ssl"
           if [ -r "/opt/webenabled/config/os/pathnames/etc/ssl/certs/$ip.$vhost.$default_domain.intermediate" ]
           then
             keywords="$keywords${keywords+ }ssl_intermediate"
           fi
        fi
        echo "$i ip=$ip$keywords"
      else
        echo "$i"
      fi
    done
  }
  output=`output`
  echo "$output"|egrep "^$default_name( .*)?$"|sort -u
  echo "$output"|egrep -v "^$default_name( .*)?$"|sort -u
fi
