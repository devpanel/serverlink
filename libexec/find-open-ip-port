#!/bin/bash

usage() {
  echo "Usage: `basename "$0"` <protocol> <port_range>

  port_range: start-end. e.g.: 4000-4100
"

  exit 1
}

# main
[ $# -lt 2 ] && usage

curr_dir=`dirname "$0"`
if ! source "$curr_dir/../lib/functions"; then
  echo "Error: unable to load auxiliary functions"
  exit 1
fi

data_dir="`dirname "$0"`/../config/reserved-ip-ports"
if [ ! -e "$data_dir" ]; then
  error "directory '$data_dir' doesn't exist"
elif [ ! -d "$data_dir" ]; then
  error "path '$data_dir' is not a directory"
fi

declare -l protocol

protocol="$1"
port_range="$2"

if [ -z "$protocol" ]; then
  error "missing protocol directory"
elif [ -z "$port_range" ]; then
  error "missing port range"
fi

if [[ "$port_range" =~ ^([0-9]+)-([0-9]+)$ ]]; then
  start_port="${BASH_REMATCH[1]}"
  end_port="${BASH_REMATCH[2]}"

  if [ $start_port -ge $end_port ]; then
    echo "Error: initial port should be greater or equal than end port (on -p)" 1>&2
    exit 1
  fi
else
  echo "Error: invalid format on -p argument" 1>&2
  exit 1
fi

declare -i port=$start_port
unset found
while [ $port -le $end_port ]; do
  reserved_file="$data_dir/$port.$protocol"
  if [ -e "$reserved_file" ]; then
    port+=1
    continue
  fi

  if ! fuser "$port/$protocol" &>/dev/null && [ ! -d "$reserved_file" ]; then
    ln -s /dev/null "$reserved_file"
    reserve_status=$?
    found=1
    break
  else
    port+=1
  fi
done

if [ -n "$found" ]; then
  if [ $reserve_status -eq 0 ]; then
    echo "$port"
  else
    error "failed to reserve port $port/$protocol"
  fi
else
  error "couldn't find any open port on protocol $protocol on range $port_range"
fi
