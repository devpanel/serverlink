#!/bin/bash
usage() {
  echo "Usage: ${0##*/} <vhost> <archive_file>

  Generates a token to download the specified archive file from the given
  vhost.
"

  exit 1
}

get_real_url() {
  if [ -z "$1" ]; then
    echo "$FUNCNAME(): missing param" 1>&2
    return 1
  fi

  local url="$1"

  url=${url//@virtwww_base_domain@/$virtwww_base_domain}
  url=${url//@vhost@/$vhost}
  url=${url//@token_str@/$token_str}

  echo "$url"
}

# main

[ $# -lt 2 -o -z "$1" -o -z "$2" ] && usage

self_bin=`readlink -e "$0"`
if [ $? -ne 0 ]; then
  echo "Error: unable to get self path" 1>&2
  exit 1
fi

self_dir="${self_bin%/*}"
sys_dir="${self_dir%/*}"

lib_f="$sys_dir/lib/functions"
if ! source "$lib_f"; then
  echo "Error: unable to import $lib_f" 1>&2
  exit 1
fi
load_devpanel_config || exit $?

[ -z "$1" -o -z "$2" ] && usage

vhost="$1"
# using mode archive: it's OK to operate on a locked vhost
"$self_dir/check-vhost-name" archive "$vhost" || exit 1

load_vhost_config "$vhost" || exit $?
user="$v__vhost__linux_user"

archive_file_in="$2"

url_tmpl=$(get_template_url_for_archive_download ) || exit $?

archives_dir=$(readlink -m "$v__vhost__archives_dir")
archive_file=$(readlink -m "$archives_dir/$archive_file_in")

virtwww_base_domain="$lamp__apache_vhosts__virtwww_domain"

# check whether the specified file is inside the archives_dir
if [ "${archive_file#$archives_dir/}" == "$archive_file" ]; then
  error "archive file specified is out of dir $archives_dir"
fi

token_str='%%session_id%%' # let the token bin replace it
url=$(get_real_url "$url_tmpl")

token_bin="$sys_dir/bin/create-perl-cgi-session"

declare -a cmd_ar=( "$token_bin" -e +10m \
  -P archive_file="$archive_file" \
  -P devpanel_app=download-vhost-archive -O "$url" )

if [ $EUID -eq 0 ]; then
  su -l -c "${cmd_ar[*]}" "$user"
else
  "${cmd_ar[@]}"
fi
