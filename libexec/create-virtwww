#!/bin/bash
# Options:
#   -n - do not activate apache vhost, use the 'Vhost-simple-dummy' macro

function usage() {
  echo "Usage: ${0##*/} <vhost> [domain.tld,alias[,...]]"
	exit 1
}


[ -z "$1" -o "$1" == '--help' ] && usage

while getopts "n" OPTOPT
do
  case "$OPTOPT" in
    n) dummy="-dummy";;
    *) exit 1;;
  esac
done
[ $OPTIND -gt 1 ] && shift `expr $OPTIND - 1`

[ -z "$1" ] && usage

self_bin=`readlink -e "$0"`
if [ $? -ne 0 ]; then
  echo "Error: unable to get self path" 1>&2
  exit 1
fi

self_dir="${self_bin%/*}"
sys_dir="${self_dir%/*}"

lib_file="$sys_dir/lib/functions"
if ! source "$lib_file"; then
  echo "Error: unable to source lib file '$lib_file'" 1>&2
  exit 1
fi

load_devpanel_config || exit $?

unset domains_list_raw domains_list domains_txt
vhost="$1"
[ -n "$2" ] && domains_list_raw="$2"

"$sys_dir/libexec/check-vhost-name" restore "$vhost" || exit $?

base_domain="$vhost.$lamp__apache_vhosts__virtwww_domain"
domains_txt="$base_domain"

if [ -n "$domains_list_raw" ]; then
  domains_list=${domains_list_raw//,/ }
  for domain in $domains_list; do
    if ! is_valid_domain_string "$domain"; then
      error "invalid domain string '$domain'"
    elif curr_vhost_with_domain=$(get_vhost_with_hostname "$domain"); then
      error "domain '$domain' is already on vhost '$curr_vhost_with_domain'"
    fi

    if [ -n "$domains_txt" ]; then
      if ! in_array "$domain" $domains_txt; then
        domains_txt+=" $domain"
      fi
    else
      domains_txt="$domain"
    fi
  done
fi

generate_linux_username_for_vhost "$vhost" && web_user="$_dp_value"
if [ $? -ne 0 ]; then
  error "unable to generate linux username for vhost"
fi

# apache vhost
# create vhost group
if ! getent group "$web_user"; then
  if groupadd "$web_user"; then
    echo "Created group: $web_user"
  else
    error "failed to create group '$web_user'"
  fi
fi

# create linux user for vhost
vhost_home="$lamp__apache_paths__virtwww_homedir/$web_user"
doc_root="$vhost_home/public_html/$vhost"

if ! getent passwd "$web_user"; then
  if useradd -m -d "$vhost_home" -g "$lamp__apache__exec_group" \
     -G "$web_user" "$web_user"; then
    echo "Created user: $web_user"
  else
    error "failed to create web user '$web_user'"
  fi
fi

ln -s "$vhost" "$lamp__paths__user_vhost_map/$web_user"
# /linux user

config_dir="$lamp__paths__vhosts_config_dir/$vhost"
if ! mkdir -m 750 "$config_dir"; then
  error "unable to create directory '$config_dir'"
fi

if ! mkdir -m 750 "$config_dir/apache" "$config_dir/ssl"; then
  error "unable to create auxiliary dirs"
fi

touch "$config_dir/config.ini"
chmod 640 "$config_dir/config.ini"
chgrp -R "$web_user" "$config_dir"

vhost_cache_dir="$sys_dir/var/cache/vhost/$vhost"
mkdir -m 2750 $vhost_cache_dir
chown root:$web_user $vhost_cache_dir

# apache log dir setup
vhost_log_dir="$lamp__apache_paths__vhost_logs_dir/$web_user"
mkdir -p -m 0750 "$vhost_log_dir"
touch "$vhost_log_dir/"{access,error}_log
touch "$vhost_log_dir/$vhost-"{access,error}_log
chmod 0640 "$vhost_log_dir/"{access,error}_log
chmod 0640 "$vhost_log_dir/$vhost-"{access,error}_log
chgrp -R "$web_user" "$vhost_log_dir"
# // apache log dir setup

# stack stuff
"$sys_dir/compat/suexec/chcgi" "$web_user" +0
"$sys_dir/compat/suexec/chcgi" "$web_user" +2
"$sys_dir/compat/suexec/chcgi" "$web_user" +7

hash edquota &>/dev/null && edquota -p w_ "$web_user"
# /stack stuff

# apache vhost: create the basic directory structure
chgrp -- $lamp__apache__group "$vhost_home"
su - -c "
chmod 0710 \"$vhost_home\"
mkdir -m 0711 ~/.webenabled ~/.webenabled/private
mkdir -p \"$vhost_home/bin\"
chmod 0700 \"$vhost_home/bin\"
mkdir -m 0755 -p \"$vhost_home/public_html/$vhost\"
mkdir -p \"$vhost_home/public_html/gen\"
mkdir -m 711 -p \"$vhost_home/public_html/gen/archive\"
chmod 0755 \"$vhost_home/public_html/gen\"
chmod 0711 \"$vhost_home/public_html\"
rm -f \"$vhost_home/logs\"
ln -s \"$vhost_log_dir\" \"$vhost_home/logs\"

[ ! -d ~/.ssh ] && mkdir -m 700 ~/.ssh
touch ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys

$sys_dir/bin/gen-vhost-ssh-priv-key -o

mkdir -m 700 ~/.devpanel
" -s /bin/bash "$web_user"
# // apache vhost

declare -a vhost_opts_ar=(
  "vhost.base_domain = $base_domain"     \
  "vhost.domains = $domains_txt"         \
  "vhost.document_root = $doc_root"      \
  "vhost.linux_user = $web_user"         \
  "vhost.enabled = yes"                  \
  "vhost.server_name = $base_domain"
)

save_opts_in_vhost_config "$vhost" "${vhost_opts_ar[@]}"
if [ $? -eq 0 ]; then
  echo "Successfully created vhost $vhost."
else
  error "failed to save config for '$vhost'"
fi
