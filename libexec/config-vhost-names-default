#!/bin/bash

usage() {
  echo "Usage: `basename "$0"` <domain>
  
This script sets the base domain name for Apache virtualhosts."
  exit 1
}

# main

[ $# -eq 0 -o -z "$1" ] && usage

new_domain="$1"

self_bin=`readlink -e "$0"`
self_dir=${self_bin%/*}
sys_dir=${self_dir%/*}
sys_metadata_bin="$self_dir/system-metadata-handler"

lib_file="$sys_dir/lib/functions"
if ! . "$lib_file"; then
  echo "Error: unable to load lib file '$lib_file'" 1>&2
  exit 1
fi

if ! is_valid_domain_string "$new_domain"; then
  error "invalid string to use as base domain name"
fi

old_domain=$(get_server_base_domain 2>/dev/null)

if [ -n "$old_domain" -a "$old_domain" == "$new_domain" ]; then
  echo "Warning: new domain is equal to current domain. No change needed." 1>&2
  exit 0
fi

echo "set-local apache_virtwww_domain $new_domain" | "$sys_metadata_bin" -q
if [ $? -ne 0 ]; then
  error "unable to set base domain for virtual hosts"
fi

declare -a ex_local_vhosts_ar=( $(get_list_of_local_vhosts) )

for vh in "${ex_local_vhosts_ar[@]}"; do
  set_vhost_base_domain "$vh" "$new_domain"

  prev_def_vh_domain=$(get_vhost_default_hostname "$vh")
  if [[ "$prev_def_vh_domain" == *.$old_domain ]]; then
    tmp_vh_domain=${prev_def_vh_domain%.$old_domain}
    new_vh_domain="$tmp_vh_domain.$new_domain"
    "$self_dir/config-vhost-names" -N -n "$vh" '*' "$new_vh_domain"
    "$self_dir/config-vhost-names" -N -n "$vh" '-' "$prev_def_vh_domain"
  fi

  curr_base_domain=$(get_vhost_base_domain "$vh")

  for vh_domain in $(get_hostnames_from_vhost "$vh"); do
    if [ "$vh_domain" == "$curr_base_domain" ]; then
      continue # can't reset the base domain with the tool below
    elif [ "$vh_domain" == "$def_vh_domain" ]; then
      continue
    fi

    if [[ "$vh_domain" == *.$old_domain ]]; then
      tmp_vh_domain=${vh_domain%.$old_domain}
      new_vh_domain="$tmp_vh_domain.$new_domain"
      "$self_dir/config-vhost-names" -N -n "$vh" + "$new_vh_domain" - "$vh_domain"
    fi

    # write the apache config of the vhost, but don't restart it
    "$self_dir/config-vhost-apache" -n "$vh"
  done
done

post_update_dir="$sys_dir/compat/apache_include/post-update-hostname"
# after changing hostname, run scripts from apps that are dependant on
# hostname
for post_run_script in "$post_update_dir/"*; do
  [ ! -e "$post_run_script" ] && continue

  if [ -f "$post_run_script" -a -x "$post_run_script" ]; then
    "$post_run_script" "$new_domain" "$old_domain"
    script_status=$?
    if [ $script_status -ne 0 ]; then
      echo "Warning: post update script $post_run_script returned $script_status" 1>&2
      sleep 1
    fi
  fi
done

if [ ${#ex_local_vhosts_ar[@]} -gt 0 ]; then
  apache_service=$(get_apache_service_name )
  if [ $? -eq 0 ]; then
    services_bin="$sys_dir/libexec/system-services"

    $services_bin $apache_service restart
  fi
fi

echo
echo "Successfully updated vhost base domain."
exit 0
