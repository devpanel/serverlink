#!/bin/bash

run()
{
  echo "  Running $@"
  "$@"
}
run_su()
{
  echo "  running su -l -c '$@' $user" >&2
  su -l -c "$*" "$user"
}
run_su_ignore_quota()
{
  echo "  running su -l -c '$@' $user" >&2
  "$dir/ignore-quota" "$user" 8 su -l -c "$*" "$user"
}
error()
{
  echo "ERROR${1+: }$@" >&2
  exit 1
}

home()
{
  local user="$1"
  perl -le '@a=getpwnam $ARGV[0] or die "no such user $ARGV[0]\n"; print $a[7]'  "$user"
}

# main

self_bin=`readlink -e "$0"`
cmd_name=`basename "$0"`
dir=`dirname "$self_bin"`
dir_bin=`readlink -m "$dir/../bin"`
devpanel_dir=`readlink -e "$dir/.."`

lib_file="$devpanel_dir/lib/functions"
vars_file="$devpanel_dir/lib/variables"
for inc_file in "$lib_file" "$vars_file"; do
  if ! source "$inc_file"; then
    error "unable to source file '$inc_file'"
  fi
done

vhost="$1"
user="w_$vhost"
vhost_config_dir="$devpanel_dir/config/vhosts/$vhost"

if [ "$cmd_name" == "lock-vhost" ]; then
  $dir/check-vhost-name lock "$vhost" || error
elif [ "$cmd_name" == "unlock-vhost" ]; then
  $dir/check-vhost-name unlock "$vhost" || error
fi

trap 'exit 1' INT TERM HUP
if lock_path "$vhost_config_dir"; then
  trap 'unlock_path "$vhost_config_dir"' EXIT
else
  exit 1
fi

if [ "$cmd_name" == "lock-vhost" ]; then
  # locking all services on the vhost
  echo "Disabling apache virtual host"
  "$dir/lock-vhost-apache" "$vhost" || error

  echo "Locking user's password"
  run "$dir/ignore-quota" "$user" 8 usermod -L "$user" || error

  echo "Locking .ssh/authorized_keys"
  run_su "$dir_bin/lock-vhost-ssh" || error

  echo "Locking crontab"
  run_su_ignore_quota "$dir_bin/lock-vhost-crontab" || error
elif [ "$cmd_name" == "unlock-vhost" ]; then
  # un-locking all services
  echo "Enabling apache virtual host"
  "$dir/unlock-vhost-apache" "$vhost" || error

  echo "Unlocking user's password"
  run "$dir/ignore-quota" "$user" 8 usermod -U "$user" || error

  echo "Unlocking .ssh/authorized_keys"
  run_su "$dir_bin/unlock-vhost-ssh" || error

  echo "Unlocking crontab"
  run_su_ignore_quota "$dir_bin/unlock-vhost-crontab" || error
else
  error "unknown command name (was this file renamed?)"
fi
